@page "/payment-txn"

@using RothschildHouse.GUI.PaymentGateway.Clients;
@using RothschildHouse.GUI.PaymentGateway.Clients.Models;
@using RothschildHouse.GUI.PaymentGateway.Clients.Models.Common;

@inject RothschildHouseClient rothschildHouseClient

<PageTitle>Payment Transactions</PageTitle>

<h1>Payment Transactions</h1>

@if (response == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudDataGrid Items="@response.Model">
        <Columns>
            <PropertyColumn Property="x => x.PaymentTransactionStatus" Title="Transaction Status" />
            <PropertyColumn Property="x => x.ClientApplication" Title="Client Application" />
            <PropertyColumn Property="x => x.OrderTotal" Title="Order Total" />
            <PropertyColumn Property="x => x.Currency" Title="Currency" />
            <PropertyColumn Property="x => x.CreationDateTime" Title="Created on" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudStack Row>
                    <a href="@($"/payment-txn/{context.Item.Id}")">
                        <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Details</MudButton>
                    </a>
                </MudStack>
            </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    private ListResponse<PaymentTransactionItemModel> response;

    protected override async Task OnInitializedAsync()
    {
        response = await rothschildHouseClient.GetPaymentTransactionsAsync(new GetPaymentTransactionsRequest());
    }
}
